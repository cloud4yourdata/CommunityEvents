-- Databricks notebook source
CREATE DATABASE IF NOT EXISTS SQLDay2022 LOCATION 'dbfs:/mnt/datalake/analytics_zone/DWHS/SQLDay2022'

-- COMMAND ----------

USE SQLDay2022;

-- COMMAND ----------

DROP TABLE IF EXISTS SurrogateKeyDemo1;

-- COMMAND ----------

CREATE OR REPLACE TABLE SurrogateKeyDemo1 (
 Sk BIGINT COMMENT 'SURROGATE KEY',
 Id BIGINT,
 Val DOUBLE,
 Part BIGINT 
) USING DELTA
PARTITIONED BY (Part)

-- COMMAND ----------

SET sampledata.nrows = 10000;
SET sampledata.npartitions = 4;

-- COMMAND ----------

WITH SampleData 
(
 SELECT
 Id,
 rand() AS Val
 FROM
    RANGE(0, ${sampledata.nrows}, 1, ${sampledata.npartitions})
)
INSERT INTO SurrogateKeyDemo1
SELECT monotonically_increasing_id() as Sk,Id,Val, Id %100 AS Part FROM SampleData 

-- COMMAND ----------

SELECT * FROM SurrogateKeyDemo1 ORDER BY Sk

-- COMMAND ----------

SELECT count(*), count(DISTINCT Sk) FROM SurrogateKeyDemo1

-- COMMAND ----------

WITH SampleData 
(
 SELECT
 Id,
 rand() AS Val
 FROM
    RANGE(0, ${sampledata.nrows}, 1, ${sampledata.npartitions})
)
INSERT INTO SurrogateKeyDemo1
SELECT monotonically_increasing_id() as Sk,Id,Val, Id %100 AS Part FROM SampleData 

-- COMMAND ----------

SELECT count(*), count(DISTINCT Sk) FROM SurrogateKeyDemo1

-- COMMAND ----------

TRUNCATE TABLE SurrogateKeyDemo1;

-- COMMAND ----------

WITH SampleData (
  SELECT
    Id,
    rand() AS Val
  FROM
    RANGE(
      0,
      ${sampledata.nrows},
      1,
      ${sampledata.npartitions}
    )
)
INSERT INTO
  SurrogateKeyDemo1
SELECT
  monotonically_increasing_id() + (
    SELECT
      IFNULL(MAX(Sk),0) + 1 AS LastSk
    FROM
      SurrogateKeyDemo1
  ) AS Sk,
  Id,
  Val,
  Id % 100 AS Part
FROM
  SampleData

-- COMMAND ----------

SELECT count(*), count(DISTINCT Sk) FROM SurrogateKeyDemo1

-- COMMAND ----------

WITH SampleData (
  SELECT
    Id,
    rand() AS Val
  FROM
    RANGE(
      0,
      ${sampledata.nrows},
      1,
      ${sampledata.npartitions}
    )
)
INSERT INTO
  SurrogateKeyDemo1
SELECT
  monotonically_increasing_id() +  (
    SELECT
      IFNULL(MAX(Sk),0) + 1 AS LastSk
    FROM
      SurrogateKeyDemo1
  ) AS Sk,
  Id,
  Val,
  Id % 100 AS Part
FROM
  SampleData

-- COMMAND ----------

SELECT count(*), count(DISTINCT Sk) FROM SurrogateKeyDemo1

-- COMMAND ----------

-- DBTITLE 1,DROP TABLE -GENERATED COLUMNS (SHOW ON DEMO)
DROP TABLE IF EXISTS SQLDay2022.SurrogateKeyDemo2;

-- COMMAND ----------

SET sampledata.nrows = 10000;
SET sampledata.npartitions = 4;

-- COMMAND ----------

-- DBTITLE 1,GENERTED COLUMNS
CREATE OR REPLACE TABLE SQLDay2022.SurrogateKeyDemo2 (
 Sk BIGINT  GENERATED BY DEFAULT AS IDENTITY ( START WITH 0 INCREMENT BY 1) COMMENT 'SURROGATE KEY',
 Id BIGINT,
 Val DOUBLE,
 Part BIGINT GENERATED ALWAYS AS (Id % 100)
) USING DELTA
PARTITIONED BY (Part)

-- COMMAND ----------

WITH SampleData (
  SELECT
    Id,
    rand() AS Val
  FROM
    RANGE(
      0,
      ${sampledata.nrows},
      1,
      ${sampledata.npartitions}
    )
)
INSERT INTO
  SQLDay2022.SurrogateKeyDemo2(Id,Val)
SELECT
  Id,
  Val
FROM
  SampleData

-- COMMAND ----------

SELECT * FROM SQLDay2022.SurrogateKeyDemo2 ORDER BY Sk

-- COMMAND ----------

WITH SampleData (
  SELECT
    Id,
    rand() AS Val
  FROM
    RANGE(
      0,
      ${sampledata.nrows},
      1,
      ${sampledata.npartitions}
    )
)
INSERT INTO
  SQLDay2022.SurrogateKeyDemo2(Id,Val)
SELECT
  Id,
  Val
FROM
  SampleData

-- COMMAND ----------

SELECT count(*), count(DISTINCT Sk),MIN(Sk),MAX(Sk) FROM SQLDay2022.SurrogateKeyDemo2

-- COMMAND ----------

SELECT * FROM SQLDay2022.SurrogateKeyDemo2